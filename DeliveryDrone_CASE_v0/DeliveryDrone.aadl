package DeliveryDrone

public
	with Base_Types;
	with Data_Types;
	with Agree_Constants;
	with Agree_Nodes;
	with Agree_Constants;
	with CASE_Consolidated_Properties;
	with GNC;

	system PositionEstimator 
		features
			-- inputs
			gps_pos: in data port Data_Types::Position.impl;
			imu_pos: in data port Data_Types::Position.impl;	
			pos_act_in: in data port Data_Types::Position.impl;
			
			-- outputs
			est_pos: out data port Data_Types::Position.impl;
		
		annex verdict {**
			CyberRel "pos_out_I" = imu_pos:I or gps_pos:I or pos_act_in:I => est_pos:I;
			CyberRel "pos_out_A" = imu_pos:A or gps_pos:A or pos_act_in:A => est_pos:A;
		**};
	end PositionEstimator;

	system Navigation
		features
			-- inputs
			est_pos: in data port Data_Types::Position.impl; 
			dest_pos: in data port Data_Types::Position.impl;
			cmd: in data port Base_Types::Boolean;
			flight_control_state: in data port Base_Types::Boolean;
			
			-- outputs
			move: out data port Base_Types::Boolean;				
			cur_pos: out data port Data_Types::Position.impl;
			pos_act_out: out data port Data_Types::Position.impl;
			probe_dest_pos: out data port Data_Types::Position.impl
			{CASE_Consolidated_Properties::probe => true; };
		
		annex verdict {**
			CyberRel "move_out_I"         = est_pos:I or cmd:I or flight_control_state:I => move:I;
			CyberRel "move_out_A"         = est_pos:A or cmd:A or flight_control_state:A => move:A;
			CyberRel "nav_location_out_I" = est_pos:I or cmd:I or flight_control_state:I => cur_pos:I;
			CyberRel "nav_location_out_A" = est_pos:A or cmd:A or flight_control_state:A => cur_pos:A;
			CyberRel "pos_act_out_I"      = est_pos:I or cmd:I or flight_control_state:I => pos_act_out:I;
		**};
	end Navigation;
	
	system FlightControl
		features
			-- inputs
			actuation_response: in data port Base_Types::Boolean;
			move: in data port Base_Types::Boolean;
			
			-- outputs
			motor_cmd: out data port Base_Types::Boolean;
			fc_state: out data port Base_Types::Boolean;
		
		annex verdict {**
			CyberRel "state_out_I"  = move:I or actuation_response:I => fc_state:I;
			CyberRel "state_out_A"  = move:A or actuation_response:A => fc_state:A;
			CyberRel "fc_cmd_out_I" = move:I or actuation_response:I => motor_cmd:I;
			CyberRel "fc_cmd_out_A" = move:A or actuation_response:A => motor_cmd:A;
		**};
	end FlightControl;
	
	system Actuation
		features
			-- inputs
			motor_cmd: in data port Base_Types::Boolean;
			
			-- outputs
			response: out data port Base_Types::Boolean;
			
		annex verdict {**
			CyberRel "response_out_I" = motor_cmd:I => response:I;
			CyberRel "response_out_A" = motor_cmd:A => response:A;
		**};
	end Actuation;
	
	system DeliveryPlanner
		features
			-- inputs
			bus_in: in data port Data_Types::InputBus.impl;
			cur_pos: in data port Data_Types::Position.impl;
			delivery_status: in data port Data_Types::DeliveryStatus;
			radio_response: in data port Data_Types::RadioResponse.impl;
			camera_result: in data port Base_Types::Integer;
			gps_health_status: in data port Base_Types::Boolean; 
			imu_health_status: in data port Base_Types::Boolean;
			rdo_health_status: in data port Base_Types::Boolean;
			cam_health_status: in data port Base_Types::Boolean;
			package_is_secure: in data port Base_Types::Boolean; 
			
			-- outputs
			radio_cmd: out data port Base_Types::Boolean;
			delivery_cmd: out data port Data_Types::PackageDeliveryCommand;
			dest_location: out data port Data_Types::Position.impl;
			bus_out: out data port Base_Types::Boolean;
	        nav_cmd: out data port Base_Types::Boolean;					
			camera: out data port Base_Types::Boolean;
			probe_safe_landing: out data port Data_Types::ProbeSafeLanding.impl
			{CASE_Consolidated_Properties::probe => true; };
			constellation: out data port Data_Types::Constellation; 
			launch_pos: out data port Data_Types::Position.impl;
			probe_init_mode: out data port Base_Types::Boolean
			{CASE_Consolidated_Properties::probe => true; }; 
			probe_abort_mode: out data port Base_Types::Boolean
			{CASE_Consolidated_Properties::probe => true; }; 
			target_clear: out data port Base_Types::Boolean;
			valid_marker: out data port Base_Types::Boolean;
						
					
		annex verdict {**
			CyberRel "dp_bus_out_I"         = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => bus_out:I;
			CyberRel "dp_bus_out_A"         = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => bus_out:A;
			CyberRel "dp_cmd_out_I"         = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => nav_cmd:I;
			CyberRel "dp_cmd_out_A"         = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => nav_cmd:A;
			CyberRel "dp_delivery_status_I" = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => delivery_cmd:I;
			CyberRel "dp_delivery_status_A" = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => delivery_cmd:A;
			CyberRel "dp_camera_out_I"      = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => camera:I;
			CyberRel "dp_camera_out_A"      = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => camera:A;
			CyberRel "dp_radio_cmd_I"       = cur_pos:I or delivery_status:I or camera_result:I or radio_response:I => radio_cmd:I;
			CyberRel "dp_radio_cmd_A"       = cur_pos:A or delivery_status:A or camera_result:A or radio_response:A => radio_cmd:A;
		**};
	end DeliveryPlanner;
	
	system Radio
		features
			-- inputs
			comm_in: in data port Data_Types::RadioResponse.impl;
			radio_in: in data port Base_Types::Boolean;
			
			-- outputs
			comm_out: out data port Base_Types::Boolean;
			radio_out: out data port Data_Types::RadioResponse.impl;
			health_status: out data port Base_Types::Boolean;
		
		annex verdict {**
			CyberRel "comm_out_I" = comm_in:I => comm_out:I;
			CyberRel "comm_out_A" = comm_in:A => comm_out:A;
			CyberRel "plan_out_I" = radio_in:I => radio_out:I;
			CyberRel "plan_out_A" = radio_in:A => radio_out:A;
		**};
	end Radio;
	
	system DeliveryItemMechanism
		features
			-- inputs
			delivery_cmd_in : in data port Data_Types::PackageDeliveryCommand;
			
			-- outputs
			delivery_status_out: out data port Data_Types::DeliveryStatus;
			package_is_secure: out data port Base_Types::Boolean;

			
		annex verdict {**
			CyberRel "delivery_status_out_I" = delivery_cmd_in:I => delivery_status_out:I;
			CyberRel "delivery_status_out_A" = delivery_cmd_in:A => delivery_status_out:A;
		**};
	end DeliveryItemMechanism;
	
	system Camera
		features
			camera_in: in data port Base_Types::Boolean;
			camera_out: out data port Base_Types::Integer;
			health_status: out data port Base_Types::Boolean;

		annex verdict {**
			CyberRel "camera_out_I" = camera_in:I => camera_out:I;
			CyberRel "camera_out_A" = camera_in:A => camera_out:A;
		**};		
	end Camera;
			
	system Connector
		features
			-- inputs
				bus_in: in data port Data_Types::InputBus.impl;
					
			-- outputs
				bus_out: out data port Data_Types::InputBus.impl;

	annex verdict {**
            CyberRel "bus_out_I" = bus_in:I => bus_out:I;
            CyberRel "bus_out_A" = bus_in:A => bus_out:A;
        **};
		
	end Connector;
	
	system DeliveryDroneSystem
		features
			satellite0_sig_pos: in data port Data_Types::Position.impl;
			satellite1_sig_pos: in data port Data_Types::Position.impl;
			bus1: in data port Data_Types::InputBus.impl;
			comm1: in data port Data_Types::RadioResponse.impl;
			
			comm2: out data port Base_Types::Boolean;
			bus2: out data port Base_Types::Boolean;			
			
			radio_cmd: out data port Base_Types::Boolean
			{CASE_Consolidated_Properties::probe => true; };
			radio_response: out data port Data_Types::RadioResponse.impl
			{CASE_Consolidated_Properties::probe => true; };
			delivery_status: out data port Data_Types::DeliveryStatus
			{CASE_Consolidated_Properties::probe => true; };
			
			actuation_out: out data port Base_Types::Boolean;
			probe_init_mode: out data port Base_Types::Boolean
			{CASE_Consolidated_Properties::probe => true; };
			probe_abort_mode: out data port Base_Types::Boolean
			{CASE_Consolidated_Properties::probe => true; };
			probe_delivery_cmd: out data port Data_Types::PackageDeliveryCommand
			{CASE_Consolidated_Properties::probe => true; };
			probe_constellation: out data port Data_Types::Constellation
			{CASE_Consolidated_Properties::probe => true; };
			probe_launch_location: out data port Data_Types::Position.impl
			{CASE_Consolidated_Properties::probe => true; };
			probe_delivery_location: out data port Data_Types::Position.impl
			{CASE_Consolidated_Properties::probe => true; };
			probe_fly_cmd: out data port Base_Types::Boolean
			{CASE_Consolidated_Properties::probe => true; };
			
			
		annex verdict{**
			CyberReq {
				id = "CyberReq01"
				description = "The drone shall be resilient to loss of ability to deliver a package to 
				              the appropriate consumer location"
				condition = actuation_out:I or actuation_out:A or delivery_status:I or delivery_status:A
				severity = Hazardous
		    };
		    
			CyberReq {
				id = "CyberReq02"
				description = "The drone shall be resilient to maliciously commanded improper delivery of a package"
				condition = delivery_status:I 
				severity = Hazardous
			};
			
	    	MissionReq {
		    	id ="MReq01"
		    	description = "Deliver a package to the intended location."
		    	reqs = "CyberReq01","CyberReq02"
	    	};	    	
		**};
	end DeliveryDroneSystem;
	
	system implementation DeliveryDroneSystem.Impl
		subcomponents
			gnc: system GNC::GNC.Impl;
			
			radio: system Radio
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::componentType => Hybrid;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => InternallyDeveloped;
				
				-- VERDICT Cyber Defense and DAL Mitigations
								
				CASE_Consolidated_Properties::dosProtection => 7;
				CASE_Consolidated_Properties::failSafe =>7;
				CASE_Consolidated_Properties::inputValidation => 7;
				CASE_Consolidated_Properties::logging => 7;
				CASE_Consolidated_Properties::memoryProtection =>7; --  Change to 7 to satisfy threat
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::remoteAttestation =>7;
				CASE_Consolidated_Properties::resourceAvailability => 7;
				CASE_Consolidated_Properties::secureBoot =>7;
				CASE_Consolidated_Properties::staticCodeAnalysis => 7;
				CASE_Consolidated_Properties::strongCryptoAlgorithms => 7;
				CASE_Consolidated_Properties::supplyChainSecurity => 0;
				CASE_Consolidated_Properties::systemAccessControl =>7;	
							
			};
			positionEstimator: system PositionEstimator
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::canReceiveSWUpdate => true;
				CASE_Consolidated_Properties::componentType => Software;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => COTS; 

		
				CASE_Consolidated_Properties::adversariallyTestedForTrojanOrLogicBomb => 0;
				--CASE_Consolidated_Properties::adversariallyTestedForTrojanOrLogicBomb => 7; -- Fix for Logic Bomb
				
				-- VERDICT Cyber Defense and DAL Mitigations
				
				CASE_Consolidated_Properties::antiJamming =>7;
				CASE_Consolidated_Properties::dosProtection =>7;
				CASE_Consolidated_Properties::failsafe =>7;
				CASE_Consolidated_Properties::heterogeneity =>7;
				CASE_Consolidated_Properties::inputValidation =>7;
				CASE_Consolidated_Properties::logging =>7;
				CASE_Consolidated_Properties::memoryProtection =>7;
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::RemoteAttestation =>7;
				CASE_Consolidated_Properties::resourceAvailability =>7;
				CASE_Consolidated_Properties::secureBoot =>7;
				CASE_Consolidated_Properties::staticCodeAnalysis =>7;
				CASE_Consolidated_Properties::strongCryptoAlgorithms =>7;
				CASE_Consolidated_Properties::supplyChainSecurity =>7;
				CASE_Consolidated_Properties::systemAccessControl =>7;
				CASE_Consolidated_Properties::tamperProtection =>7;
				
			};
			navigation: system Navigation
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::canReceiveSWUpdate => true;
				CASE_Consolidated_Properties::componentType => Software;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => InternallyDeveloped;

				
				-- VERDICT Cyber Defense and DAL Mitigations
				CASE_Consolidated_Properties::memoryProtection =>7;
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::remoteAttestation =>7;
				CASE_Consolidated_Properties::secureBoot =>7;
				CASE_Consolidated_Properties::supplyChainSecurity => 7;
				CASE_Consolidated_Properties::systemAccessControl =>7;

			};
			fc: system FlightControl
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::canReceiveSWUpdate => true;
				CASE_Consolidated_Properties::componentType => Software;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => InternallyDeveloped;

				
				-- VERDICT Cyber Defense and DAL Mitigations
				CASE_Consolidated_Properties::memoryProtection =>7;
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::remoteAttestation =>7;
				CASE_Consolidated_Properties::secureBoot =>7;
				CASE_Consolidated_Properties::supplyChainSecurity => 7;
				CASE_Consolidated_Properties::systemAccessControl =>7;

			};
			actuation: system Actuation
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::componentType => Hardware;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => InternallyDeveloped;

				
				-- VERDICT Cyber Defense and DAL Mitigations
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::supplyChainSecurity => 7;
				CASE_Consolidated_Properties::systemAccessControl =>7;
			};
			deliveryPlanner: system DeliveryPlanner
			{	
			 	-- VERDICT Component Properties
				CASE_Consolidated_Properties::canReceiveSWUpdate => true;
				CASE_Consolidated_Properties::componentType => Software;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
--				CASE_Consolidated_Properties::pedigree => Sourced; -- use for CRV demo
				CASE_Consolidated_Properties::pedigree => InternallyDeveloped; -- use for MBAAS demo

				-- VERDICT Cyber Defense and DAL Mitigations
				CASE_Consolidated_Properties::antiJamming =>7;
				CASE_Consolidated_Properties::dosProtection =>7;
				CASE_Consolidated_Properties::failSafe =>7;
				CASE_Consolidated_Properties::Heterogeneity =>7;
				CASE_Consolidated_Properties::inputValidation =>7;
				CASE_Consolidated_Properties::logging =>7;
				CASE_Consolidated_Properties::memoryProtection =>7;
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::RemoteAttestation =>7;
				CASE_Consolidated_Properties::resourceAvailability =>7;
				CASE_Consolidated_Properties::secureBoot =>7;
				CASE_Consolidated_Properties::staticCodeAnalysis =>7;
				CASE_Consolidated_Properties::strongCryptoAlgorithms =>7;
				CASE_Consolidated_Properties::systemAccessControl =>7;
				CASE_Consolidated_Properties::supplyChainSecurity => 0;
				CASE_Consolidated_Properties::tamperProtection =>0;
				
			};
			deliveryItemMechanism: system DeliveryItemMechanism {
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::componentType => Hardware;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => COTS;
				-- VERDICT Cyber Defense and DAL Mitigations
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::systemAccessControl =>7;			
				CASE_Consolidated_Properties::tamperProtection =>0;  -- MBAS will synthesize a DAL for this defense property
				CASE_Consolidated_Properties::supplyChainSecurity =>0; -- MBAS will synthesize a DAL for this defense property 
			};
			camera: system Camera
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::componentType => Hardware;
				CASE_Consolidated_Properties::hasSensitiveInfo => true;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
				CASE_Consolidated_Properties::pedigree => InternallyDeveloped;
				
				
				-- VERDICT Cyber Defense and DAL Mitigations
				CASE_Consolidated_Properties::physicalAccessControl =>7;
				CASE_Consolidated_Properties::supplyChainSecurity => 7;
				CASE_Consolidated_Properties::systemAccessControl =>7;
			};
			
			connector: system Connector
			{
				-- VERDICT Component Properties
				CASE_Consolidated_Properties::componentType => Hybrid;
				CASE_Consolidated_Properties::insideTrustedBoundary => true;
			 	--CASE_Consolidated_Properties::pedigree => COTS;
			 	CASE_Consolidated_Properties::pedigree => InternallyDeveloped; -- Fix for Logic Bomb / Hardware Trojan
				CASE_Consolidated_Properties::staticCodeAnalysis => 7;
				CASE_Consolidated_Properties::inputValidation => 7;
				CASE_Consolidated_Properties::memoryProtection => 7;
				CASE_Consolidated_Properties::secureBoot => 7;
				CASE_Consolidated_Properties::logging => 7;
				CASE_Consolidated_Properties::adversariallyTestedForTrojanOrLogicBomb => 0;
			};

		connections
			c1: port positionEstimator.est_pos -> navigation.est_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;
			CASE_Consolidated_Properties::encryptedTransmission => 6;
			};
			
			c1b: port deliveryPlanner.launch_pos -> gnc.launch_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c2: port navigation.move -> fc.move
			{CASE_Consolidated_Properties::connectionType => Trusted;};

			c3: port fc.fc_state -> navigation.flight_control_state
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c4: port deliveryPlanner.dest_location -> navigation.dest_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c5: port navigation.cur_pos -> deliveryPlanner.cur_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			
			c7: port deliveryItemMechanism.delivery_status_out -> deliveryPlanner.delivery_status			
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c9: port camera.camera_out -> deliveryPlanner.camera_result			
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c10: port deliveryPlanner.radio_cmd -> radio.radio_in
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c11: port radio.radio_out -> deliveryPlanner.radio_response
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c12: port gnc.gps_pos -> positionEstimator.gps_pos
			{
			CASE_Consolidated_Properties::connectionType => Trusted;
			--CASE_Consolidated_Properties::connectionType => Untrusted;
			};
			
			c14a: port bus1 -> connector.bus_in
			{CASE_Consolidated_Properties::connectionType => Untrusted;};
			
			c14b: port connector.bus_out -> DeliveryPlanner.bus_in
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c15: port deliveryPlanner.bus_out -> bus2
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c16: port comm1 -> radio.comm_in
			{CASE_Consolidated_Properties::connectionType => Trusted;
			CASE_Consolidated_Properties::deviceAuthentication => 9;
			CASE_Consolidated_Properties::encryptedTransmission => 9;
			 --CASE_Consolidated_Properties::deviceAuthentication => 7; -- Fix for Network Injection
			 --CASE_Consolidated_Properties::encryptedTransmission => 5; -- Fix for Network Injection
			};
			
			c17: port radio.comm_out -> comm2
			{CASE_Consolidated_Properties::connectionType => Trusted;};

			c18a: port gnc.imu_pos -> positionEstimator.imu_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c19: port fc.motor_cmd -> actuation.motor_cmd
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c20: port actuation.response -> fc.actuation_response
			{CASE_Consolidated_Properties::connectionType => Trusted;};

			c22: port satellite0_sig_pos -> gnc.satellite0_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c23: port satellite1_sig_pos -> gnc.satellite1_pos
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c24: port navigation.pos_act_out -> positionEstimator.pos_act_in
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c25: port deliveryPlanner.delivery_cmd -> deliveryItemMechanism.delivery_cmd_in
			{CASE_Consolidated_Properties::connectionType => Trusted;};

			c26: port deliveryPlanner.nav_cmd -> navigation.cmd
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c27: port deliveryPlanner.camera -> camera.camera_in			
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c28: port deliveryPlanner.radio_cmd -> radio_cmd
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c29: port radio.radio_out -> radio_response
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c30: port deliveryItemMechanism.delivery_status_out -> delivery_status
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c31: port deliveryPlanner.delivery_cmd -> probe_delivery_cmd
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c32: port actuation.response -> actuation_out
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c33: port deliveryPlanner.constellation -> gnc.constellation
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c34: port gnc.gps_health_status -> deliveryPlanner.gps_health_status
			{
			CASE_Consolidated_Properties::connectionType => Trusted;
			--CASE_Consolidated_Properties::connectionType => Untrusted;
			};
			
			c35: port gnc.imu_health_status -> deliveryPlanner.imu_health_status
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c36: port radio.health_status -> deliveryPlanner.rdo_health_status
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c37: port camera.health_status -> deliveryPlanner.cam_health_status
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c38: port gnc.probe_constellation -> probe_constellation
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c39: port deliveryPlanner.probe_init_mode -> probe_init_mode
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c40: port gnc.probe_launch_pos -> probe_launch_location
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c41: port navigation.probe_dest_pos -> probe_delivery_location
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c42: port deliveryItemMechanism.package_is_secure -> deliveryPlanner.package_is_secure
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c43: port deliveryPlanner.nav_cmd -> probe_fly_cmd
			{CASE_Consolidated_Properties::connectionType => Trusted;};
			
			c44: port deliveryPlanner.probe_abort_mode -> probe_abort_mode
			{CASE_Consolidated_Properties::connectionType => Trusted;};
												
	end DeliveryDroneSystem.impl;
	
end DeliveryDrone;
